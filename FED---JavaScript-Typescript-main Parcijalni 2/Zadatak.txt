FED Kurs: Parcijalni test
----------------------------------------------------------------------------------------------------------------------
ZADATAK:
	index.html: (Kod pisati u fajlu skripta.js: ./js/skripta.js)
		--------------
			Izvršiti validaciju forme upotrebom JavaScript tehnologije.	
			Sva polja u formi moraju biti unesena kako bi se forma submitovala,
			pocetno slovo imena i prezimena mora biti veliko.
			
			Na formi se nalazi jedan checkbox, i dva selecta. Inicijalno je "Membership" select onemogucen (disabled). Klikom na checkbox "Premium" omoguciti pomenuti select.
			Takodje, ukoliko se checkbox "Premium" klikne opet, onemoguciti select.
			
			Pored Membership selecta, postoji jos jedan select sa id-em sel2 i inicijalno je sakriven i onemogucen (disabled). 
			Ukoliko korisnik odabere platinum opciju u prvom selectu, potrebno je prikazati drugi select (promeniti njegov visibility) i aktivirati (da nije vise disabled). 
			Ukoliko se odabere neka druga opcija (gold ili silver) ili se iskljuci Premium checkbox sel2 je opet potrebno sakriti i deaktivirati (disabled).

			Napomena: klasa za sel2, se takodje naziva sel2.			

			Sel2 ima dve vrednosti, hrana i pice, opcije koje su dostupne samo za platinum clanove. 
			Prilikom menjanja opcija selecta, paragraf select_paragraf koji inicijalno ima vrednost:
			"Odabrali ste : "
			dopuniti sa podacima odabranog dezerta.

			Tako da ako je odabran rucak, u pomenutom paragrafu trebao bi da bude ispis:
			"Odabrali ste : rucak" i obojiti select_paragraf, kao i pozadinu submit dugmeta sa odgovarajućom vrednosti iz objekta boje. 

 			
			ili ako je odabrano pice, u istom paragrafu treba da pise:

			"Odabrali ste : pice" i obojiti select_paragraf, kao i pozadinu submit dugmeta sa odgovarajućom vrednosti iz objekta boje. 
			
			Objekat koji sadrzi vrednosti boja definisan je na sledeci nacin i njega treba da iskoristite:

			var boje = {
				rucak: "Crimson",
				pice: "Teal"
			};

			
			Forma se ne moze submitovati ukoliko polja nisu popunjena.

			Napredno
			---------------------
			Onemogućiti submit forme ako uneto Ime i Prezime se ne poklapaju sa jednim od predfinisanih.
			var osobe = [{ime: "Pera", prezime: "Peric"}, {ime: "Marko", prezime: "Markovic"}, 
					{ime: "Jovo", prezime:"Jovic"}];

	
ts.html (Kod pisati u fajlove app.ts AutoSkola.ts Instruktor.ts)
		--------------
			Osnovno
			---------------------

			NAPOMENA: Pre pocetka rada, u ts.html izbrisati sledeci script tag: <script src="js/kriptovano.js"></script>

			Data je klasa Ispit, Implementirati klasu Instruktor i AutoSkola.

			Implementirati klasu Instruktor (fajl Instruktor.ts), koja se sastoji od:
				-atributa:
					private _ime: string;
    				private _prezime: string;
    				private _jmbg: number;
				-konstruktora
				-geteri za sva polja
				-seteri za sva polja

    		Implementirati klasu AutoSkola (fajl AutoSkola.ts), koja se sastoji od:
				-atributa:
					private _naziv: string;
    				private _instruktori: Instruktor[];
    				private _ispiti: Ispit[];
				-konstruktora (prima parametar naziv, a nizove inicijalizuje na prazne nizove)
				-geteri za sva polja
				-seteri za sva polja
			    -metoda:
			    	-dodajIspit //prima objekat tipa Ispit i dodaje ga u niz _ispiti
			    	-refreshIspis 
			    	-izracunajProlaznostZaInstruktora 
					-najboljiInstruktoriPoNacinuPolaganja


			-------
			Metoda refreshIspis u tbody tabele upisuje podatke o ispitima auto skole po formatu:
			Redni broj (indeks ispita uvecan za 1), ime i prezime kandidata, ime i prezime instruktora, nacin polaganja (Teorija ili Prakticno), datum ispita, i bodovi.
			Ukoliko kandidat ima vise od 55 bodova, smatra se da je polozio ispit, a odgovarajucem td-u treba dodati klasu green, a ako ima 55 i manje treba se dodati klasa red.
			Prilikom generisanja tr-ova sa podacima, podatke mozete cuvati u promenljivoj i na kraju upisati u tbody vrednost kao innerHTML.

			Primer izgleda tabele:

			<table class="table">
				<thead>
					<tr>
						<th>#</th>
						<th>Kandidat</th>
						<th>Instruktor</th>
						<th>Način polaganja</th>
						<th>Datum</th>
						<th>Bodovi</th>
					</tr>
				</thead>
				<tbody id="tbody">
					<tr>
						<td>1</td>
						<td>Jovan Jovanovic</td>
						<td>Pera Peric</td>
						<td>Teorija</td>
						<td>2018-02-11</td>
						<td class="red">35</td>
					</tr>
					<tr>
						<td>2</td>
						<td>Jovan Jovanovic</td>
						<td>Pera Peric</td>
						<td>Prakticno</td>
						<td>2018-03-05</td>
						<td class="green">78</td>
					</tr>
					.
					.
					.
				</table>
			

			-------
			Metoda izracunajProlaznostZaInstruktora treba da primi dva parametra:
			
			nacinPolaganja: string
			instruktor: Instruktor
			
			Metoda nema povratno vrednost: tip void.
			
			Metoda racuna prolaznost za odgovarajuci nacin polaganja prosledjenog instruktora. 
			Za instruktore, atribut jmbg je jedinstven, odnosno ne bi trebalo da postoje dva instruktora sa istim jmbg-om.

			Za resavanje, pronaci sve ispite za prosledjenog instruktora, na kojima se polagao prosledjen nacin polaganja i izracunati procentualnu prolaznost.
			Rezultat upisati u div #podaci.

			Procentualna vrednost se dobija po formuli: (bpi * 100) / ubi
			Gde je:
				bpi - broj polozenih ispita kod datog instruktora
				ubi - ukupan broj ispita kod datog instruktora

			Ispis treba da bude u formatu:
			<h3>Prolaznost za ${nacinPolaganja} kod instruktora ${ime i prezime instruktor} je ${izracunata vrednost prolaznosti kandidata za nacin polaganja kod izabranog instruktora}</h3>

			-------
			Metoda najboljiInstruktoriPoNacinuPolaganja ne prima parametre i nema povratnu vrednost.

			Za oba nacina polaganja: pronaci koji instruktor ima najvise polozenih ispita po nacinu polaganja (ispita ciji broj bodova je veci od 55).

			(Pronalazenje instruktora ciji je broj ispita maksimalan)

			U divu sa idom "podaci" se ispisuje:
			<h3>Instruktor sa najboljom prolaznosti za teoriju je ${ime i prezime instruktora sa najvecim brojem polozene teorije} sa ukupno polozenih ${broj polozenih testova za najboljeg instruktora} testova.</h3>
			<br>
			<h3>Instruktor sa najboljom prolaznosti za prakticno je  ${ime i prezime instruktora sa najvecim brojem polozenih prakticnih ispita} sa ukupno polozenih ${broj polozenih testova za najboljeg instruktora} testova.</h3>
			
			
			+++++++
			Implementirati funkciju wireEvents (fajl app.ts) koja povezuje klik dogadjaje sa dugmicima:
				-za dodajIspit: kupe se informacije o ispitu iz odgvarajucih input polja, pravi se dva nova objekta tipa Ispit (jedan za Teorija nacin polaganja, jedan za Prakticno nacin polaganja), 
				                novi objekti kao instruktora koriste aktivnog instruktora, i objekti se dodaju u objekat autoSkola. Nakon dodavanja pozvati metodu refreshIspis autoSkole.
				-za izracunajProlaznostZaInstruktora: preuzima se vrednost selecta nacinPolaganjaSelekt, i poziva se metoda izracunajProlaznostZaInstruktora objekta autoSkola prosledjivanjem preuzete vrednosti selekta i aktivnog instruktora
				-za najboljiInstruktoriPoNacinuPolaganja: poziva se metoda najboljiInstruktoriPoNacinuPolaganja auto skole
				

			Napredno
			------------------------------------
			U klasi AutoSkola Implementirati metodu zavrsenaObuka.

			Metoda zavrsenaObuka, prima parametar instruktor:Instruktor i nema povratnu vrednost.
			Metoda za prosledjenog instruktora pronalazi kandidate koji su zavrsili obuku, odnosno polozili i teorijski i praktican ispit (tj. imali vise od 55 poena na oba testa).
			Za pronadjene kandidate tj. pronadjene ispite ispisuje u tabelu po istom formatu kao metoda refresh ispis.

			U funkciji wireEvents povezati klik na odgovaracuje dugme sa metodom zavrsenaObuka.
			